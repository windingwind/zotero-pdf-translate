/**
 * This is an example of a translation service.
 *
 * 1. Copy this file to `serviceID.ts`.
 * 2. Fill in the `id`, `type`, `helpUrl`, `defaultSecret`, `secretValidator`, `translate` functions.
 * 3. Add the service to `services.ts`.
 */

import { getPref } from "../../utils";
import { TranslationService } from "./base";

export const ExampleTranslationService: TranslationService = {
  id: "example",
  type: "sentence",
  helpUrl: "https://example.com/",

  defaultSecret: "accessKeyId#accessKeySecret",
  secretValidator(secret) {
    const parts = secret?.split("#");
    const flag = parts.length === 2;
    const partsInfo = `AccessKeyId: ${parts[0]}\nAccessKeySecret: ${parts[1]}`;
    return {
      secret,
      status: flag && secret !== this.defaultSecret,
      info:
        secret === this.defaultSecret
          ? "The secret is not set."
          : flag
            ? partsInfo
            : `The secret must have 2 parts joined by '#', but got ${parts?.length}.\n${partsInfo}`,
    };
  },

  async translate(data) {
    // Get some settings
    const option1 = getPref("options1");

    // Request
    const xhr = await Zotero.HTTP.request("POST", "https://example.com/api/", {
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
      body: "",
      responseType: "json",
    });

    if (xhr?.status !== 200) {
      throw `Request error: ${xhr?.status}`;
    }
    if (xhr.response.Code !== "200") {
      throw `Service error: ${xhr.response.Code}:${xhr.response.Message}`;
    }

    // Set result
    data.result = xhr.response;
  },

  getConfig() {
    return [
      {
        type: "input",
        prefKey: "action",
        inputType: "string",
        nameKey: "service-aliyun-dialog-action",
      },
    ];
  },
};
